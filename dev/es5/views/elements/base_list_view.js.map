{"version":3,"sources":["views/elements/base_list_view.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAS,OAAO,CAAC,UAAU,CAAC;IACnC,CAAC,GAAe,OAAO,CAAC,YAAY,CAAC;IACtC,QAAQ,GAAS,OAAO,CAAC,gBAAgB,CAAC;IAC1C,cAAc,GAAG,OAAO,CAAC,sCAAsC,CAAC,CAAC;;AAErE,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC;AAC/B,WAAO,EAAE,IAAI;AACb,YAAQ,EAAE,cAAc;AACxB,aAAS,EAAE,EAAE;AACb,UAAM,EAAE;AACJ,eAAO,EAAE,SAAS;KACrB;AACD,gBAAY,EAAE,UAAS,MAAM,EAAE;AAC3B,YAAG,MAAM,CAAC,QAAQ,EACd,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAEhD,gBAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACnD,YAAI,CAAC,WAAW,GAAG,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC;KACjD;AACD,YAAQ,EAAE,YAAW;AACjB,YAAI,QAAQ,GAAG;AACX,sBAAU,EAAE;AACR,wBAAQ,EAAE,YAAY;AACtB,2BAAW,EAAE,aAAa;aAC7B;SACJ,CAAA;AACD,YAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;KACxD;AACD,aAAS,EAAE,YAAW;AAClB,YAAI,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KAC9C;AACD,WAAO,EAAE,YAAW;AAChB,YAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACX,wBAAY,EAAE,IAAI;SACrB,CAAC,CAAC;KACN;CACJ,CAAC,CAAC;;AAEH,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;AAC3B,WAAO,EAAE,IAAI;AACb,aAAS,EAAE,gBAAgB;AAC3B,gBAAY,EAAE,UAAS,MAAM,EAAE;AAC3B,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,gBAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACnD,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAS,KAAK,EAAE;AACjC,gBAAI,CAAC,OAAO,CAAC,YAAY,EAAE;AACvB,qBAAK,EAAE,KAAK;AACZ,wBAAQ,EAAE,MAAM,CAAC,OAAO;AACxB,yBAAS,EAAE,MAAM,CAAC,aAAa;aAClC,CAAC,CAAC;SACN,CAAC,CAAC;AACH,YAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;KACxE;AACD,iBAAa,EAAE,UAAS,YAAY,EAAE;AAClC,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAS,KAAK,EAAE;AACjC,gBAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,YAAY,EAC/B,KAAK,CAAC,GAAG,CAAC;AACN,4BAAY,EAAE,IAAI;aACrB,CAAC,CAAC;SACV,CAAC,CAAC;KACN;CACJ,CAAC,CAAC;;AAGH,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","file":"views/elements/base_list_view.js","sourcesContent":["var Backbone       = require('backbone'),\r\n     _             = require('underscore'),\r\n    BaseView       = require('views/baseview'),\r\n    navListItemTpl = require('templates/elements/nav_list_item.tpl');\r\n\r\nvar listItemView = BaseView.extend({\r\n    tagName: 'li',\r\n    template: navListItemTpl,\r\n    className: '',\r\n    events: {\r\n        'click': 'onClick'\r\n    },\r\n    onInitialize: function(params) {\r\n        if(params.template)\r\n            this.template = _.template(params.template);\r\n\r\n        BaseView.prototype.onInitialize.call(this, params);\r\n        this.modelBinder = new Backbone.ModelBinder();\r\n    },\r\n    onRender: function() {\r\n        var bindings = {\r\n            isSelected: {\r\n                selector: '.menu-item',\r\n                elAttribute: 'data-active'\r\n            }\r\n        }\r\n        this.modelBinder.bind(this.model, this.el, bindings);\r\n    },\r\n    serialize: function() {\r\n        this.data = _.clone(this.model.attributes);\r\n    },\r\n    onClick: function() {\r\n        this.model.set({\r\n            'isSelected': true\r\n        });\r\n    }\r\n});\r\n\r\nvar listView = BaseView.extend({\r\n    tagName: 'ul',\r\n    className: 'nav navbar-nav',\r\n    onInitialize: function(params) {\r\n        var self = this;\r\n        BaseView.prototype.onInitialize.call(this, params);\r\n        this.collection.each(function(model) {\r\n            self.addView(listItemView, {\r\n                model: model,\r\n                template: params.itemTpl,\r\n                className: params.itemClassName\r\n            });\r\n        });\r\n        this.listenTo(this.parent, 'change:stage', this.onChangeStage, this);\r\n    },\r\n    onChangeStage: function(currentStage) {\r\n        this.collection.each(function(model) {\r\n            if (model.get('id') == currentStage)\r\n                model.set({\r\n                    'isSelected': true\r\n                });\r\n        });\r\n    }\r\n});\r\n\r\n\r\nmodule.exports = listView;"],"sourceRoot":"/source/"}