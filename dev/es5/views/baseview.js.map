{"version":3,"sources":["views/baseview.js"],"names":[],"mappings":"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","file":"views/baseview.js","sourcesContent":["var Backbone = require('backbone'),\r\n    _        = require('underscore'),\r\n    $        = require('jquery'),\r\n    Api      = require('api'),\r\n    apiNew   = require('apiNew');\r\n\r\nvar BaseView = Backbone.View.extend({\r\n\r\n    template: '',\r\n\r\n    tagName: 'div',\r\n\r\n    className: 'BaseView',\r\n\r\n    /**\r\n     * Methods provides basic initialization functionality\r\n     */\r\n    initialize: function(params) {\r\n\r\n        //this.middlewares = {};\r\n\r\n        //this.subscribes  = {};\r\n\r\n        this.api = Api.getInstance();\r\n\r\n        this.contentInternal = this.$el;\r\n\r\n        this.parent = params ? params.parent : null;\r\n\r\n        this.isRendered = false;\r\n\r\n        this.stage = params ? params.stage : null;\r\n\r\n        this.data = {};\r\n\r\n        this.nestedViews = [];\r\n        /**\r\n         * Unique id for current view\r\n         * @type {string}\r\n         * @private\r\n         */\r\n        this.id = this.id; //|| Helpers.generateUUID();\r\n\r\n        //this.registeredMiddlewares = [];\r\n\r\n        // this.registeredSubscibes = [];\r\n\r\n        this.template = _.template(this.template);\r\n\r\n        if (!this.collection && this.parent)\r\n            this.collection = this.parent.collection;\r\n\r\n        this.onInitialize(params);\r\n        //this.setSubscribes();\r\n        //this.setMiddlewares();\r\n        this.serialize(params);\r\n        this.afterInitialize(params);\r\n\r\n    },\r\n\r\n    getId: function() {\r\n        return this.id;\r\n    },\r\n    getContentInternal: function() {\r\n        return $(this.contentInternal);\r\n    },\r\n    /**\r\n     * This method must be override by child classes for\r\n     * custom serialization\r\n     */\r\n    serialize: function(params) {\r\n        /** nothing to do **/\r\n    },\r\n    /**\r\n     * This method can be override by child classes for\r\n     * custom initialization. Be careful, do not forget to\r\n     * call the parent onInitialize method in inheritance\r\n     * chain.\r\n     */\r\n    onInitialize: function(params) {\r\n        /** nothing to do **/\r\n    },\r\n\r\n    afterInitialize: function(params) {\r\n        /** nothing to do **/\r\n    },\r\n    getElement: function(el) {\r\n        if (typeof el === 'string') {\r\n            return this.$el.find(el);\r\n        } else {\r\n            return el;\r\n        }\r\n    },\r\n    toggleClassNames: function() {\r\n        var parent = this.parent;\r\n        while (parent) {\r\n            this.$el.toggleClass(parent.className);\r\n            parent = parent.parent;\r\n        }\r\n        return this.el;\r\n    },\r\n    /**\r\n     * Method adds new nested view\r\n     * @param view\r\n     * @param params object\r\n     * @param targetElement\r\n     */\r\n    addView: function(view, params, targetElement) {\r\n        params = params || {};\r\n        params.parent = this;\r\n        view = new view(params);\r\n        this.nestedViews.push({\r\n            targetElement: targetElement,\r\n            view: view\r\n        });\r\n        return view;\r\n    },\r\n    renderNestedView: function(view, targetElement) {\r\n        var el = this.$el;\r\n        if (targetElement)\r\n            el = (typeof targetElement === 'string') ? this.$el.find(targetElement) : targetElement;\r\n        el.append(view.render().el);\r\n    },\r\n\r\n    getTemplate: function(name, model) {\r\n        var temp = 'text!templates/' + name + '.tpl',\r\n            template = require(temp);\r\n        return _.template(template)(model ? model : {});\r\n    },\r\n    /**\r\n     * Renders current view. It always returns itself and must be called from\r\n     * all render methods in child classes\r\n     * @returns {BaseView}\r\n     */\r\n    render: function(redraw) {\r\n\r\n        this.serialize();\r\n\r\n        if (redraw) {\r\n            this.isRendered = false;\r\n        }\r\n\r\n        if (!this.isRendered) {\r\n            this.$el.empty();\r\n            var html = this.template(this.data);\r\n            if (html) {\r\n                var el = document.createElement('div');\r\n                el.innerHTML = html;\r\n                // check if exists template wrapper\r\n                if ($(el).find('.template').length)\r\n                    this.contentInternal = $(el).find('.template').children();\r\n                else\r\n                    this.contentInternal = el.firstElementChild;\r\n                this.$el.append(this.contentInternal);\r\n            }\r\n            this.$el.attr('id', this.id);\r\n            this.isRendered = true;\r\n        }\r\n\r\n        _(this.nestedViews).forEach(function(currentElement) {\r\n            this.renderNestedView(currentElement.view, currentElement.targetElement);\r\n        }, this);\r\n\r\n        this.onRender();\r\n\r\n        return this;\r\n    },\r\n\r\n    onRender: function(params) {\r\n        /** nothing to do **/\r\n    },\r\n    /**\r\n     * Removes nested view\r\n     * @param view\r\n     */\r\n    removeNestedView: function(view) {\r\n        this.stopListening(view);\r\n        this.nestedViews = this.nestedViews.filter(function(value) {\r\n            return value.view != view;\r\n        }.bind(this));\r\n        view.remove();\r\n    },\r\n    /**\r\n     * Removes view\r\n     */\r\n    remove: function() {\r\n        // view is removed\r\n        this.isRendered = false;\r\n        // removes all nested views\r\n        _.each(this.nestedViews, function(value) {\r\n            this.removeNestedView(value.view);\r\n        }, this);\r\n        // clear all listeners\r\n        this.stopListening();\r\n        // clear main element\r\n        this.$el.empty();\r\n        // remove view\r\n        Backbone.View.prototype.remove.call(this);\r\n    },\r\n    beforeChangeStage: function() {\r\n        var deferred = $.Deferred();\r\n        setTimeout(function () {\r\n            deferred.resolve(true);                \r\n        });\r\n        return deferred.promise();\r\n    },\r\n    afterChangeStage: function(currentStage) {\r\n        /*nothing to do*/\r\n    },\r\n    beforeModelUpdate: function(params){\r\n        /*nothing to do*/\r\n    },\r\n    onChangeParams: function(params){\r\n        /*nothing to do*/\r\n    },\r\n    changeStage: function(params) {\r\n        if (params.stagesArray[0]) {\r\n            this.beforeChangeStage(params).then(function(data) {\r\n\r\n                if (this.currentStage !== params.stagesArray[0]) { // if current stage is already rendered and next stage doesn't exist\r\n                    if (this.nextStage) // if current view exist we have to remove it\r\n                        this.removeNestedView(this.nextStage);\r\n                    var target = this.getContentInternal().find('.bb-route-container');\r\n\r\n                    this.nextStage = this.addView(this.routes[params.stagesArray[0]], {\r\n                        stage: params.stagesArray[0],\r\n                        query: params.query\r\n                    }, target);\r\n                    this.renderNestedView(this.nextStage, target);\r\n                }\r\n\r\n\r\n                this.currentStage = params.stagesArray[0]; // save current stage\r\n                params.stagesArray.shift(); // remove current stage from stages array\r\n\r\n                this.afterChangeStage(this.currentStage);\r\n                this.nextStage.onChangeParams(params);\r\n                this.nextStage.changeStage(params);\r\n\r\n            }.bind(this));\r\n        }\r\n    }\r\n});\r\n\r\nmodule.exports = BaseView;\r\n"],"sourceRoot":"/source/"}