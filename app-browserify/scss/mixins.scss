$color-interval: 10% !global;

$baseFontSize: 16px;
$breakpoint: 768px;
$vba-box-shadow: 0px 1px 1px rgba(0, 0, 0, .05);

.full-size {
    width: 100%;
    height: 100%;
}

.border-box {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin border-radius($value) {
    -moz-border-radius: $value;
    -webkit-border-radius: $value;
    border-radius: $value;
}

.scroll {
    width: 100%;
    height: 100%;
    overflow: auto;
}

$type-scale: (
    0: $baseFontSize * .75,
    1: $baseFontSize,
    2: $baseFontSize * 1.333,
    3: $baseFontSize * 1.776889,
    4: $baseFontSize * 2.36859304
);

//Colors:

$ballet-colors: (
    'yellow': #CFA451,
    'blue': lighten(#005DA3, 5%),
    'dark_gray': #B4B1BC,
    'gray': #D7D5D8,
    'light_gray': #F2F0F3,
    'text': #333333
);

@function get-color($key: 'gray') {
    @return map-get($ballet-colors, $key);
}

@function get-color-level($color-name: 'gray', $level: 0) {
    $color: get-color($color-name);
    $color-base: if($level < 0, black, white);
    $new-level: if($level < 0, $level * -1, $level);

    @return mix($color-base, $color, $new-level * $color-interval);
}

//Colors: end

//Mixins

@function em($pixels, $context: $baseFontSize) {
    @if (unitless($pixels)) {
        $pixels: $pixels * 1px;
    }

    @if (unitless($context)) {
        $context: $context * 1px;
    }

    @return $pixels / $context * 1em;
}

@function lineHeights($map) {
    $array: ();
    @each $index, $item in $map {
        $array: map-merge($array, ($index: $item * 1.25));
    }
    @return $array;
}

$line-heights: lineHeights($type-scale);

@function type-scale($level: 1, $parent:  null) {
    @if ($parent != null) {
        @return em(map-get($type-scale, $level), map-get($type-scale, $parent));
    } @else {
        @return em(map-get($type-scale, $level));
    }
}

@function line-height($level: 1, $parent: null) {
    @if ($parent != null) {
        @return em(map-get($line-heights, $level), map-get($line-heights, $parent));
    } @else {
        @return em(map-get($line-heights, $level));
    }
}

@mixin set-type($level: 1) {
    font-size: type-scale($level);
    line-height: line-height($level);
}

@mixin clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}